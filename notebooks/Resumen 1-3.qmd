---
title: "Resumen 1-3"
format:
    html:
        toc: true
theme: litera
---


# Capitulo 1: El camino del programa

El autor nos presenta las habilidades de solución de problemas como las más importantes en el mundo del computer science. Ya que esto se traduce en la habilidad de formular problemas, pensar de forma creativa las soluciones, y expresar todo de forma clara y concisa.

Para atacar estos problemas requerimos de **programas** que nos serviran de herramientas para realizar tareas con el computador.

Debajo el cuadro muestra la estructura básica de un programa.

| Elemento              | Descripción                                                                |
|-----------------------|----------------------------------------------------------------------------|
| input                 | origen de los datos como el teclado, un archivo, la red u otro dispositivo |
| output                | se muestra los datos en la pantalla, se graban en otro archivo o se envían |
| math                  | operaciones de matemáticas simples como suma y multiplicación              |
| conditional execution | un chequeo de condiciones para correr el código apropiado                  |
| repetition            | realizar una acción de forma repetida, probablemente con variaciones       |

## Corriendo Python

Para crear estos programas necesitamos un medio a través del cual podamos comunicarnos con el computador. En nuestro caso utilizaremos **Python**, un lenguaje formal sin las ambiguedades de un lenguaje natural como el español, y de alto nivel, por lo que es de fácil comprensión para humanos.

El interprete de Python es un programa que nos permite ejecutar códigos Python.

```{python}
print('hello world!!')
```

Además tenemos acceso a operadores matemáticos, podemos almacenar valores de distintos tipos dentro de variables. Tipos como strings, integers o floating-point numbers.

El uso de un lenguaje formal nos permite obviar los problemas del lenguaje natural como la ambiguedad, redundancia enunciados que no pueden interpretarse de forma literal. Nuestros programas deben ser inambiguos, literales y debemos poder entenderlos completo a través del análisis de tokens y estructura.

**Debugging** es la tarea de los programadores de encontrar bugs y resolverlos para que los programas ejecuten como esperamos.

## Ejercicios

1.1 In a print statement, what happens if you leave out one of the parentheses, or both?


```{{python}}
print('hello world!!'

  Cell In [4], line 1
    print('hello world!!'
                         ^
SyntaxError: incomplete input
```
El interprete entiende que nuestro input esta incompleto, por lo que comprende la función.

```{{python}}
print('hello world!!'

  Cell In [5], line 1
    print'hello world!!'
    ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?
```
El interprete entiende que le faltan los paréntesis a la función `print()`.



